[{"title":"GO语言学习笔记(一)","date":"2020-08-07T02:12:52.000Z","path":"2020/08/07/GO语言学习笔记-一/","text":"学习GO语言ing……这是我边学边整理的一些笔记 变量1.1 什么是变量变量：variable 变量是为存储特定类型的值而提供给内存位置的名称。在go中声明变量有多种语法。所以变量的本质就是一小块内存，用于存储数据，在程序运行过程中数值可以改变 1.2 声明变量var名称类型是声明单个变量的语法。 以字母或下划线开头，由一个或多个字母、数字、下划线组成 声明一个变量 第一种，指定变量类型，声明后若不赋值，使用默认值 12var name typename = value 第二种，根据值自行判定变量类型(类型推断Type inference) 如果一个变量有一个初始值，Go将自动能够使用初始值来推断该变量的类型。因此，如果变量具有初始值，则可以省略变量声明中的类型。 1var name = value 第三种，省略var, 注意 :=左侧的变量不应该是已经声明过的(多个变量同时声明时，至少保证一个是新变量)，否则会导致编译错误(简短声明) 123456name := value// 例如var a int = 10var b = 10c : = 10 这种方式它只能被用在函数体内，而不可以用于全局变量的声明与赋值 示例代码： 12345678package mainvar a = \"Hello\"var b string = \"World\"var c boolfunc main()&#123; println(a, b, c)&#125; 运行结果： 1Hello World false 多变量声明第一种，以逗号分隔，声明与赋值分开，若不赋值，存在默认值 12var name1, name2, name3 typename1, name2, name3 = v1, v2, v3 第二种，直接赋值，下面的变量类型可以是不同的类型 1var name1, name2, name3 = v1, v2, v3 第三种，集合类型 1234var ( name1 type1 name2 type2) 1.3 注意事项 变量必须先定义才能使用 go语言是静态语言，要求变量的类型和赋值的类型必须一致。 变量名不能冲突。(同一个作用于域内不能冲突) 简短定义方式，左边的变量名至少有一个是新的 简短定义方式，不能定义全局变量。 变量的零值。也叫默认值。 变量定义了就要使用，否则无法通过编译。 如果在相同的代码块中，我们不可以再次对于相同名称的变量使用初始化声明，例如：a := 20 就是不被允许的，编译器会提示错误 no new variables on left side of :=，但是 a = 20 是可以的，因为这是给相同的变量赋予一个新的值。 如果你在定义变量 a 之前使用它，则会得到编译错误 undefined: a。如果你声明了一个局部变量却没有在相同的代码块中使用它，同样会得到编译错误，例如下面这个例子当中的变量 a： 1234func main() &#123; var a string = \"abc\" fmt.Println(\"hello, world\")&#125; 尝试编译这段代码将得到错误 a declared and not used 此外，单纯地给 a 赋值也是不够的，这个值必须被使用，所以使用 在同一个作用域中，已存在同名的变量，则之后的声明初始化，则退化为赋值操作。但这个前提是，最少要有一个新的变量被定义，且在同一作用域，例如，下面的y就是新定义的变量 12345678910111213package mainimport ( \"fmt\")func main() &#123; x := 140 fmt.Println(&amp;x) x, y := 200, \"abc\" fmt.Println(&amp;x, x) fmt.Print(y)&#125; 运行结果： 1230xc04200a2b00xc04200a2b0 200abc","tags":[{"name":"GO语言","slug":"GO语言","permalink":"http://yoursite.com/tags/GO%E8%AF%AD%E8%A8%80/"}]},{"title":"Hexo博客搭建(一)","date":"2020-05-08T03:02:03.000Z","path":"2020/05/08/Hexo博客搭建(一)/","text":"大家好!我是天才恺，今天教大家怎么搭建hexo博客。 安装Git首先，去Git官网下载Git(已下载可以略过此步骤),安装时直接下一步就OK了。 接着，打开Git bash(如图) 放着不动。 安装node.js和cnpm让后去node.js官网下载node.js，下载安装好后打开Git，然后输入命令 npm install -g cnpm --registry=https://registry.npm.taobao.org 等待安装 安装Hexo框架输入 cnpm install -g hexo-cli","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hello World","date":"2020-05-06T02:54:30.288Z","path":"2020/05/06/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"Hexo自带","slug":"Hexo自带","permalink":"http://yoursite.com/tags/Hexo%E8%87%AA%E5%B8%A6/"}]}]